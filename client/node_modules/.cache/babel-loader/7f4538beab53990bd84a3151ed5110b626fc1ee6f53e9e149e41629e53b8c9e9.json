{"ast":null,"code":"var _jsxFileName = \"/home/kyle/code/first-app/client/src/components/Board.js\";\nimport { useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Draggable from 'react-draggable';\nimport piece_dictionary from './PiecePngs';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardStyle = createGlobalStyle`\n\n    .board-container {\n        height: 40vw;\n        width: 40vw;\n        display: grid;\n        grid-template-columns: repeat(8, 1fr);\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    .light-square, .dark-square, .trans-square {\n        height: 5vw;\n        width: 5vw;\n        display: flex;\n    }\n\n    .trans-square {\n      border: 1px solid black;\n      opacity: 0;\n      height: 100%;\n      width: 100%;\n      z-index: 1;\n    }\n\n    .light-square {\n        background-color: var(--white);\n    }\n\n    .dark-square {\n        background-color: var(--purple);\n    }\n\n    img {\n      z-index: 0;\n    }\n\n`;\n_c = BoardStyle;\nconst getSquares = (posDiff, square_dim) => {\n  const posDiffSign = posDiff > 0 ? 1 : -1;\n  let squares = posDiffSign;\n  if (Math.abs(posDiff) < square_dim / 2) {\n    return 0;\n  }\n  ;\n  posDiff = posDiff - posDiffSign * square_dim / 2;\n  while (Math.abs(posDiff) > square_dim) {\n    squares += posDiffSign;\n    posDiff -= posDiffSign * square_dim;\n  }\n  ;\n  return squares;\n};\nasync function handleMove(fromIndex, toIndex) {\n  //this result is sloppy\n  const configObj = {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\"\n    },\n    body: JSON.stringify({\n      fromIndex,\n      toIndex\n    })\n  };\n  const result = await fetch('http://127.0.0.1:5555/moves', configObj).then(r => r.json()).then(newGameState => {\n    // do this better jeez\n    const gameStateNoId = {\n      ...gameState\n    };\n    delete gameStateNoId.id;\n    delete gameStateNoId.fromIndex;\n    delete gameStateNoId.toIndex;\n    const newGameStateNoId = {\n      ...newGameState\n    };\n    delete newGameStateNoId.id;\n    delete newGameStateNoId.fromIndex;\n    delete newGameStateNoId.toIndex;\n    setGameState(newGameState);\n    return !(JSON.stringify(gameStateNoId) == JSON.stringify(newGameStateNoId));\n  });\n  console.log('result', result);\n  return result;\n}\n;\nfunction Board(_ref) {\n  let {\n    gameState\n  } = _ref;\n  let xPos;\n  let yPos;\n  const square_dim_x = window.innerWidth / 20;\n  const square_dim_y = square_dim_x + 2; // potential problem later on\n  let fromIndex;\n  let toIndex;\n  const state = {\n    activeDrags: 0,\n    deltaPosition: {\n      x: 0,\n      y: 0\n    }\n  };\n  const handleDrag = (e, ui) => {\n    const {\n      x,\n      y\n    } = state.deltaPosition;\n    state.deltaPosition = {\n      x: x + ui.deltaX,\n      y: y + ui.deltaY\n    };\n  };\n  const onStart = (e, i) => {\n    ++state.activeDrags;\n    fromIndex = i;\n  };\n  async function onStop(e, dragElement) {\n    --state.activeDrags;\n    const xSquares = getSquares(state.deltaPosition.x, square_dim_x);\n    const ySquares = getSquares(state.deltaPosition.y, square_dim_y);\n    toIndex = fromIndex + 8 * ySquares + xSquares;\n    const validMove = handleMove(fromIndex, toIndex);\n    console.log('dir', console.dir(validMove));\n    console.log('validmove', validMove);\n    console.log('b4');\n    console.log(validMove.then(console.log));\n    // console.log(false in validMove)\n    // console.log(true in validMove)\n    if (!handleMove(fromIndex, toIndex)) {\n      state.deltaPosition = {\n        x: 0,\n        y: 0\n      };\n    }\n    ;\n  }\n  ;\n  const pieces_array = gameState.pieces.split('');\n  const colors_array = gameState.colors.split('');\n  if (pieces_array.length == 0 || colors_array.length == 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  ;\n  const boardDivs = [];\n  let row = 0;\n  for (let i = 0; i < 64; i++) {\n    // set color\n    let shade;\n    if (i % 2 == 0 && row % 2 == 0 || i % 2 == 1 && row % 2 == 1) {\n      shade = 'light';\n    } else shade = 'dark';\n\n    // set piece\n    let piecePng;\n    if (colors_array[i] == 'E') {\n      piecePng = '';\n    } else {\n      const color = colors_array[i];\n      const piece = pieces_array[i];\n      piecePng = piece_dictionary[`${color}${piece}`];\n    }\n    ;\n    const square_id = `square${i}`;\n    boardDivs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${shade}-square`,\n      children: [/*#__PURE__*/_jsxDEV(Draggable, {\n        onDrag: handleDrag,\n        onStart: e => onStart(e, i),\n        onStop: onStop,\n        bounds: \".board-container\",\n        position: {\n          x: state.deltaPosition.x,\n          y: state.deltaPosition.y\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          draggable: \"false\",\n          src: piecePng\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: square_id,\n        className: \"trans-square\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }, this));\n    if ((i + 1) % 8 == 0) {\n      row += 1;\n    }\n    ;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BoardStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      children: boardDivs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default Board;\nvar _c, _c2;\n$RefreshReg$(_c, \"BoardStyle\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","createGlobalStyle","Draggable","piece_dictionary","Fragment","_Fragment","jsxDEV","_jsxDEV","BoardStyle","_c","getSquares","posDiff","square_dim","posDiffSign","squares","Math","abs","handleMove","fromIndex","toIndex","configObj","method","headers","body","JSON","stringify","result","fetch","then","r","json","newGameState","gameStateNoId","gameState","id","newGameStateNoId","setGameState","console","log","Board","_ref","xPos","yPos","square_dim_x","window","innerWidth","square_dim_y","state","activeDrags","deltaPosition","x","y","handleDrag","e","ui","deltaX","deltaY","onStart","i","onStop","dragElement","xSquares","ySquares","validMove","dir","pieces_array","pieces","split","colors_array","colors","length","boardDivs","row","shade","piecePng","color","piece","square_id","push","className","children","onDrag","bounds","position","draggable","src","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/kyle/code/first-app/client/src/components/Board.js"],"sourcesContent":["import { useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Draggable from 'react-draggable';\n\nimport piece_dictionary from './PiecePngs';\n\nconst BoardStyle = createGlobalStyle`\n\n    .board-container {\n        height: 40vw;\n        width: 40vw;\n        display: grid;\n        grid-template-columns: repeat(8, 1fr);\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    .light-square, .dark-square, .trans-square {\n        height: 5vw;\n        width: 5vw;\n        display: flex;\n    }\n\n    .trans-square {\n      border: 1px solid black;\n      opacity: 0;\n      height: 100%;\n      width: 100%;\n      z-index: 1;\n    }\n\n    .light-square {\n        background-color: var(--white);\n    }\n\n    .dark-square {\n        background-color: var(--purple);\n    }\n\n    img {\n      z-index: 0;\n    }\n\n`\n\nconst getSquares = (posDiff, square_dim) => {\n  const posDiffSign = (posDiff > 0 ? 1 : -1)\n  let squares = posDiffSign\n  if (Math.abs(posDiff) < square_dim / 2) {\n    return 0\n  };\n  posDiff = posDiff - (posDiffSign * square_dim / 2)\n  while(Math.abs(posDiff) > square_dim) {\n    squares += (posDiffSign)\n    posDiff -= (posDiffSign * square_dim)\n  };\n  return squares\n};\n\nasync function handleMove(fromIndex, toIndex) {\n  //this result is sloppy\n  const configObj = {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\",\n    },\n    body: JSON.stringify({fromIndex, toIndex,}),\n  };\n  const result = await fetch('http://127.0.0.1:5555/moves', configObj)\n    .then(r => r.json())\n    .then(newGameState => {\n      // do this better jeez\n      const gameStateNoId = {...gameState}\n      delete gameStateNoId.id\n      delete gameStateNoId.fromIndex\n      delete gameStateNoId.toIndex\n      const newGameStateNoId = {...newGameState}\n      delete newGameStateNoId.id\n      delete newGameStateNoId.fromIndex\n      delete newGameStateNoId.toIndex\n      setGameState(newGameState)\n      return !(JSON.stringify(gameStateNoId) == JSON.stringify(newGameStateNoId));\n    })\n    console.log('result', result)\n    return result\n};\n\nfunction Board({ gameState }) {\n\n    let xPos;\n    let yPos;\n\n    const square_dim_x = window.innerWidth / 20\n    const square_dim_y = square_dim_x + 2 // potential problem later on\n    let fromIndex;\n    let toIndex;\n\n    const state = {\n        activeDrags: 0,\n        deltaPosition: {x: 0, y: 0},\n    }\n\n    const handleDrag = (e, ui) => {\n        const {x, y} = state.deltaPosition;\n        state.deltaPosition = {\n          x: x + ui.deltaX,\n          y: y + ui.deltaY\n        };\n    };\n    const onStart = (e, i) => {\n        ++state.activeDrags\n        fromIndex = i\n    };\n    async function onStop(e, dragElement) {\n        --state.activeDrags;\n        const xSquares = getSquares(state.deltaPosition.x, square_dim_x);\n        const ySquares = getSquares(state.deltaPosition.y, square_dim_y);\n        toIndex = fromIndex + (8 * ySquares) + xSquares;\n        const validMove = handleMove(fromIndex, toIndex)\n        console.log('dir', console.dir(validMove))\n        console.log('validmove', validMove)\n        console.log('b4')\n        console.log(validMove.then(console.log))\n        // console.log(false in validMove)\n        // console.log(true in validMove)\n        if(!handleMove(fromIndex, toIndex)) {\n          state.deltaPosition = {x:0, y:0}\n        };\n    };\n\n    const pieces_array = gameState.pieces.split('')\n    const colors_array = gameState.colors.split('')\n\n    if (pieces_array.length == 0 || colors_array.length == 0) {\n        return <></>\n    };\n\n    const boardDivs = [];\n    \n    let row = 0;\n    for (let i = 0; i < 64; i++) {\n        // set color\n        let shade;\n        if ((i % 2 == 0 && row % 2 == 0) || (i % 2 == 1 && row % 2 == 1)) {\n            shade = 'light'\n        } else shade = 'dark';\n\n        // set piece\n        let piecePng;\n        if (colors_array[i] == 'E') {\n            piecePng = ''\n        } else {\n            const color = colors_array[i];\n            const piece = pieces_array[i];\n            piecePng = piece_dictionary[`${color}${piece}`]\n        };\n\n        const square_id = `square${i}`;\n        boardDivs.push(\n          <div \n            className={`${shade}-square`} \n            key={i}\n          >\n            <Draggable \n              onDrag={handleDrag}\n              onStart={(e) => onStart(e, i)}\n              onStop={onStop}\n              bounds='.board-container'\n              position={{x:state.deltaPosition.x, y:state.deltaPosition.y}}\n            >\n              <img draggable='false' src={piecePng} />\n            </Draggable>\n            <div \n              id={square_id} \n              className='trans-square' \n            ></div>\n          </div>\n        )\n        \n        if ((i + 1) % 8 == 0) {\n            row += 1\n        };\n\n    }\n\n    return (\n        <>\n          <BoardStyle />\n          <div className='board-container'>\n            {boardDivs}\n          </div>\n        </>\n    );\n}\n\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}