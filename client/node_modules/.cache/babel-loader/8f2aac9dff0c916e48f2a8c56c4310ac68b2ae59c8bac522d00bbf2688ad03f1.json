{"ast":null,"code":"var _jsxFileName = \"/home/kyle/code/first-app/client/src/components/Board.js\";\nimport { useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Draggable from 'react-draggable';\nimport piece_dictionary from './PiecePngs';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardStyle = createGlobalStyle`\n\n    .board-container {\n        height: 40vw;\n        width: 40vw;\n        display: grid;\n        grid-template-columns: repeat(8, 1fr);\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    .light-square, .dark-square, .trans-square {\n        height: 5vw;\n        width: 5vw;\n        display: flex;\n    }\n\n    .trans-square {\n      border: 1px solid black;\n      opacity: 0;\n      height: 100%;\n      width: 100%;\n      z-index: 1;\n    }\n\n    .light-square {\n        background-color: var(--white);\n    }\n\n    .dark-square {\n        background-color: var(--purple);\n    }\n\n    img {\n      z-index: 0;\n    }\n\n`;\n_c = BoardStyle;\nconst getSquares = (posDiff, square_dim) => {\n  const posDiffSign = posDiff > 0 ? 1 : -1;\n  let squares = posDiffSign;\n  if (Math.abs(posDiff) < square_dim / 2) {\n    return 0;\n  }\n  ;\n  posDiff = posDiff - posDiffSign * square_dim / 2;\n  while (Math.abs(posDiff) > square_dim) {\n    squares += posDiffSign;\n    posDiff -= posDiffSign * square_dim;\n  }\n  ;\n  return squares;\n};\nfunction Board(_ref) {\n  let {\n    gameState,\n    handleMove,\n    validMove\n  } = _ref;\n  console.log('Board.js', validMove);\n  const square_dim_x = window.innerWidth / 20;\n  const square_dim_y = square_dim_x + 2; // potential problem later on\n  let fromIndex;\n  let toIndex;\n  const state = {\n    activeDrags: 0,\n    deltaPosition: {\n      x: 0,\n      y: 0\n    },\n    controlledPosition: {\n      x: 0,\n      y: 0\n    }\n  };\n  const handleDrag = (e, ui) => {\n    const {\n      x,\n      y\n    } = state.deltaPosition;\n    state.deltaPosition = {\n      x: x + ui.deltaX,\n      y: y + ui.deltaY\n    };\n    console.log(state.deltaPosition);\n    console.log(state.controlledPosition);\n  };\n  const onStart = (e, i) => {\n    ++state.activeDrags;\n    fromIndex = i;\n  };\n  const onStop = (e, dragElement) => {\n    --state.activeDrags;\n    const xSquares = getSquares(state.deltaPosition.x, square_dim_x);\n    const ySquares = getSquares(state.deltaPosition.y, square_dim_y);\n    toIndex = fromIndex + 8 * ySquares + xSquares;\n    handleMove(fromIndex, toIndex);\n    if (!validMove) {\n      console.log('not valid');\n      state.deltaPosition = {\n        x: 0,\n        y: 0\n      };\n    } else {\n      console.log('not valid');\n      state.deltaPosition = {\n        x: 1000,\n        y: 1000\n      };\n    }\n    ;\n    console.log('dP', state.deltaPosition);\n    console.log('dC', state.controlledPosition);\n  };\n  const pieces_array = gameState.pieces.split('');\n  const colors_array = gameState.colors.split('');\n  if (pieces_array.length == 0 || colors_array.length == 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  ;\n  const boardDivs = [];\n  let row = 0;\n  for (let i = 0; i < 64; i++) {\n    // set color\n    let shade;\n    if (i % 2 == 0 && row % 2 == 0 || i % 2 == 1 && row % 2 == 1) {\n      shade = 'light';\n    } else shade = 'dark';\n\n    // set piece\n    let piecePng;\n    if (colors_array[i] == 'E') {\n      piecePng = '';\n    } else {\n      const color = colors_array[i];\n      const piece = pieces_array[i];\n      piecePng = piece_dictionary[`${color}${piece}`];\n    }\n    ;\n    const square_id = `square${i}`;\n    boardDivs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${shade}-square`,\n      children: [/*#__PURE__*/_jsxDEV(Draggable, {\n        onDrag: handleDrag,\n        onStart: e => onStart(e, i),\n        onStop: onStop,\n        bounds: \".board-container\",\n        position: state.controlledPosition,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          draggable: \"false\",\n          src: piecePng\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: square_id,\n        className: \"trans-square\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }, this));\n    if ((i + 1) % 8 == 0) {\n      row += 1;\n    }\n    ;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BoardStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      children: boardDivs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default Board;\nvar _c, _c2;\n$RefreshReg$(_c, \"BoardStyle\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","createGlobalStyle","Draggable","piece_dictionary","Fragment","_Fragment","jsxDEV","_jsxDEV","BoardStyle","_c","getSquares","posDiff","square_dim","posDiffSign","squares","Math","abs","Board","_ref","gameState","handleMove","validMove","console","log","square_dim_x","window","innerWidth","square_dim_y","fromIndex","toIndex","state","activeDrags","deltaPosition","x","y","controlledPosition","handleDrag","e","ui","deltaX","deltaY","onStart","i","onStop","dragElement","xSquares","ySquares","pieces_array","pieces","split","colors_array","colors","length","boardDivs","row","shade","piecePng","color","piece","square_id","push","className","children","onDrag","bounds","position","draggable","src","fileName","_jsxFileName","lineNumber","columnNumber","id","_c2","$RefreshReg$"],"sources":["/home/kyle/code/first-app/client/src/components/Board.js"],"sourcesContent":["import { useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Draggable from 'react-draggable';\n\nimport piece_dictionary from './PiecePngs';\n\nconst BoardStyle = createGlobalStyle`\n\n    .board-container {\n        height: 40vw;\n        width: 40vw;\n        display: grid;\n        grid-template-columns: repeat(8, 1fr);\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    .light-square, .dark-square, .trans-square {\n        height: 5vw;\n        width: 5vw;\n        display: flex;\n    }\n\n    .trans-square {\n      border: 1px solid black;\n      opacity: 0;\n      height: 100%;\n      width: 100%;\n      z-index: 1;\n    }\n\n    .light-square {\n        background-color: var(--white);\n    }\n\n    .dark-square {\n        background-color: var(--purple);\n    }\n\n    img {\n      z-index: 0;\n    }\n\n`\n\nconst getSquares = (posDiff, square_dim) => {\n  const posDiffSign = (posDiff > 0 ? 1 : -1)\n  let squares = posDiffSign\n  if (Math.abs(posDiff) < square_dim / 2) {\n    return 0\n  };\n  posDiff = posDiff - (posDiffSign * square_dim / 2)\n  while(Math.abs(posDiff) > square_dim) {\n    squares += (posDiffSign)\n    posDiff -= (posDiffSign * square_dim)\n  };\n  return squares\n};\n\nfunction Board({ gameState, handleMove, validMove }) {\n\n    console.log('Board.js', validMove)\n\n    const square_dim_x = window.innerWidth / 20\n    const square_dim_y = square_dim_x + 2 // potential problem later on\n    let fromIndex;\n    let toIndex;\n\n    const state = {\n        activeDrags: 0,\n        deltaPosition: {x: 0, y: 0},\n        controlledPosition: {x: 0, y: 0},\n      }\n\n    const handleDrag = (e, ui) => {\n        const {x, y} = state.deltaPosition;\n        state.deltaPosition = {\n          x: x + ui.deltaX,\n          y: y + ui.deltaY\n        };\n        console.log(state.deltaPosition)\n        console.log(state.controlledPosition)\n    };\n    const onStart = (e, i) => {\n        ++state.activeDrags\n        fromIndex = i\n    };\n    const onStop = (e, dragElement) => {\n        --state.activeDrags;\n        const xSquares = getSquares(state.deltaPosition.x, square_dim_x);\n        const ySquares = getSquares(state.deltaPosition.y, square_dim_y);\n        toIndex = fromIndex + (8 * ySquares) + xSquares;\n\n        handleMove(fromIndex, toIndex)\n        \n        if (!validMove) {\n          console.log('not valid')\n          state.deltaPosition = {x:0, y:0}\n        } else {\n          console.log('not valid')\n          state.deltaPosition = {x: 1000, y: 1000}\n        };\n        console.log('dP', state.deltaPosition)\n        console.log('dC', state.controlledPosition)\n    };\n\n    const pieces_array = gameState.pieces.split('')\n    const colors_array = gameState.colors.split('')\n\n    if (pieces_array.length == 0 || colors_array.length == 0) {\n        return <></>\n    };\n\n    const boardDivs = [];\n    \n    let row = 0;\n    for (let i = 0; i < 64; i++) {\n        // set color\n        let shade;\n        if ((i % 2 == 0 && row % 2 == 0) || (i % 2 == 1 && row % 2 == 1)) {\n            shade = 'light'\n        } else shade = 'dark';\n\n        // set piece\n        let piecePng;\n        if (colors_array[i] == 'E') {\n            piecePng = ''\n        } else {\n            const color = colors_array[i];\n            const piece = pieces_array[i];\n            piecePng = piece_dictionary[`${color}${piece}`]\n        };\n\n        const square_id = `square${i}`;\n        boardDivs.push(\n          <div \n            className={`${shade}-square`} \n            key={i}\n          >\n            <Draggable \n              onDrag={handleDrag}\n              onStart={(e) => onStart(e, i)}\n              onStop={onStop}\n              bounds='.board-container'\n              position={state.controlledPosition}\n            >\n              <img draggable='false' src={piecePng} />\n            </Draggable>\n            <div \n              id={square_id} \n              className='trans-square' \n            ></div>\n          </div>\n        )\n        \n        if ((i + 1) % 8 == 0) {\n            row += 1\n        };\n\n    }\n\n    return (\n        <>\n          <BoardStyle />\n          <div className='board-container'>\n            {boardDivs}\n          </div>\n        </>\n    );\n}\n\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}