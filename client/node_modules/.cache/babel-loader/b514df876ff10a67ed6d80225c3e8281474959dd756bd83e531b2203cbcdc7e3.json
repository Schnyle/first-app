{"ast":null,"code":"var _jsxFileName = \"/home/kyle/code/first-app/client/src/components/Board.js\";\nimport { createGlobalStyle } from 'styled-components';\nimport Draggable from 'react-draggable';\nimport piece_dictionary from './PiecePngs';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardStyle = createGlobalStyle`\n\n    .board-container {\n        height: 40vw;\n        width: 40vw;\n        display: grid;\n        grid-template-columns: repeat(8, 1fr);\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    .light-square, .dark-square, .trans-square {\n        height: 5vw;\n        width: 5vw;\n        display: flex;\n    }\n\n    .trans-square {\n      border: 1px solid black;\n      opacity: 0;\n      height: 100%;\n      width: 100%;\n      z-index: 1;\n    }\n\n    .light-square {\n        background-color: var(--white);\n    }\n\n    .dark-square {\n        background-color: var(--purple);\n    }\n\n    img {\n      z-index: 0;\n    }\n\n`;\n_c = BoardStyle;\nfunction Board(_ref) {\n  let {\n    gameState\n  } = _ref;\n  const square_dim = window.innerWidth / 20;\n  console.log('square_dim', square_dim);\n  let fromIndex;\n  let toIndex;\n  const state = {\n    activeDrags: 0,\n    deltaPosition: {\n      x: 0,\n      y: 0\n    }\n  };\n  const handleDrag = (e, ui) => {\n    const {\n      x,\n      y\n    } = state.deltaPosition;\n    state.deltaPosition = {\n      x: x + ui.deltaX,\n      y: y + ui.deltaY\n    };\n    // console.log(state.deltaPosition)\n  };\n\n  const onStart = (e, i) => {\n    ++state.activeDrags;\n    fromIndex = i;\n    console.log('fI', fromIndex);\n  };\n  const onStop = e => {\n    --state.activeDrags;\n    let xDiff = state.deltaPosition.x;\n    const xDiffSign = xDiff > 0 ? 1 : -1;\n    xDiff = xDiff - xDiffSign * square_dim / 2;\n    let xSquares = xDiffSign;\n    while (Math.abs(xDiff) > square_dim) {\n      xSquares += xDiffSign;\n      xDiff -= xDiffSign * square_dim;\n    }\n    ;\n    toIndex = fromIndex + xSquares;\n    let yDiff = state.deltaPosition.y;\n    const yDiffSign = yDiff > 0 ? 1 : -1;\n    yDiff = yDiff - yDiffSign * square_dim / 2;\n    let ySquares = yDiffSign;\n    while (Math.abs(yDiff) > square_dim) {\n      ySquares += yDiffSign;\n      yDiff -= yDiffSign * square_dim;\n    }\n    ;\n    toIndex = toIndex + 8 * ySquares;\n    console.log('toIndex', toIndex);\n  };\n  const pieces_array = gameState.pieces.split('');\n  const colors_array = gameState.colors.split('');\n  if (pieces_array.length == 0 || colors_array.length == 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  ;\n  const boardDivs = [];\n  let row = 0;\n  for (let i = 0; i < 64; i++) {\n    // set color\n    let shade;\n    if (i % 2 == 0 && row % 2 == 0 || i % 2 == 1 && row % 2 == 1) {\n      shade = 'light';\n    } else shade = 'dark';\n\n    // set piece\n    let piecePng;\n    if (colors_array[i] == 'E') {\n      piecePng = '';\n    } else {\n      const color = colors_array[i];\n      const piece = pieces_array[i];\n      piecePng = piece_dictionary[`${color}${piece}`];\n    }\n    ;\n    const square_id = `square${i}`;\n    boardDivs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${shade}-square`,\n      children: [/*#__PURE__*/_jsxDEV(Draggable, {\n        onDrag: handleDrag,\n        onStart: e => onStart(e, i),\n        onStop: onStop,\n        bounds: \".board-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          draggable: \"false\",\n          src: piecePng\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: square_id,\n        className: \"trans-square\"\n        // onMouseMove={(e) => console.log(e.target.id)}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }, this));\n    if ((i + 1) % 8 == 0) {\n      row += 1;\n    }\n    ;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BoardStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      children: boardDivs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: state.deltaPosition.x.toFixed(0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default Board;\nvar _c, _c2;\n$RefreshReg$(_c, \"BoardStyle\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["createGlobalStyle","Draggable","piece_dictionary","Fragment","_Fragment","jsxDEV","_jsxDEV","BoardStyle","_c","Board","_ref","gameState","square_dim","window","innerWidth","console","log","fromIndex","toIndex","state","activeDrags","deltaPosition","x","y","handleDrag","e","ui","deltaX","deltaY","onStart","i","onStop","xDiff","xDiffSign","xSquares","Math","abs","yDiff","yDiffSign","ySquares","pieces_array","pieces","split","colors_array","colors","length","boardDivs","row","shade","piecePng","color","piece","square_id","push","className","children","onDrag","bounds","draggable","src","fileName","_jsxFileName","lineNumber","columnNumber","id","toFixed","_c2","$RefreshReg$"],"sources":["/home/kyle/code/first-app/client/src/components/Board.js"],"sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport Draggable from 'react-draggable';\n\nimport piece_dictionary from './PiecePngs';\n\nconst BoardStyle = createGlobalStyle`\n\n    .board-container {\n        height: 40vw;\n        width: 40vw;\n        display: grid;\n        grid-template-columns: repeat(8, 1fr);\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    .light-square, .dark-square, .trans-square {\n        height: 5vw;\n        width: 5vw;\n        display: flex;\n    }\n\n    .trans-square {\n      border: 1px solid black;\n      opacity: 0;\n      height: 100%;\n      width: 100%;\n      z-index: 1;\n    }\n\n    .light-square {\n        background-color: var(--white);\n    }\n\n    .dark-square {\n        background-color: var(--purple);\n    }\n\n    img {\n      z-index: 0;\n    }\n\n`\n\nfunction Board({ gameState }) {\n\n    const square_dim = window.innerWidth / 20\n    console.log('square_dim', square_dim)\n    let fromIndex;\n    let toIndex;\n\n    const state = {\n        activeDrags: 0,\n        deltaPosition: {x: 0, y: 0}\n    }\n\n    const handleDrag = (e, ui) => {\n        const {x, y} = state.deltaPosition;\n        state.deltaPosition = {\n          x: x + ui.deltaX,\n          y: y + ui.deltaY\n        };\n        // console.log(state.deltaPosition)\n    };\n    const onStart = (e, i) => {\n        ++state.activeDrags\n        fromIndex = i\n        console.log('fI', fromIndex)\n    };\n    const onStop = (e) => {\n        --state.activeDrags;\n        let xDiff = state.deltaPosition.x\n        const xDiffSign = (xDiff > 0 ? 1 : -1)\n        xDiff = xDiff - (xDiffSign * square_dim / 2)\n        let xSquares = xDiffSign\n        while(Math.abs(xDiff) > square_dim) {\n          xSquares += (xDiffSign)\n          xDiff -= (xDiffSign * square_dim)\n        };\n        toIndex = fromIndex + xSquares\n\n        let yDiff = state.deltaPosition.y\n        const yDiffSign = (yDiff > 0 ? 1 : -1)\n        yDiff = yDiff - (yDiffSign * square_dim / 2)\n        let ySquares = yDiffSign\n        while (Math.abs(yDiff) > square_dim) {\n          ySquares += (yDiffSign)\n          yDiff -= (yDiffSign * square_dim)\n        };\n        toIndex = toIndex + (8 * ySquares)\n        console.log('toIndex', toIndex)\n    };\n\n    const pieces_array = gameState.pieces.split('')\n    const colors_array = gameState.colors.split('')\n\n    if (pieces_array.length == 0 || colors_array.length == 0) {\n        return <></>\n    };\n\n    const boardDivs = [];\n    \n    let row = 0;\n    for (let i = 0; i < 64; i++) {\n        // set color\n        let shade;\n        if ((i % 2 == 0 && row % 2 == 0) || (i % 2 == 1 && row % 2 == 1)) {\n            shade = 'light'\n        } else shade = 'dark';\n\n        // set piece\n        let piecePng;\n        if (colors_array[i] == 'E') {\n            piecePng = ''\n        } else {\n            const color = colors_array[i];\n            const piece = pieces_array[i];\n            piecePng = piece_dictionary[`${color}${piece}`]\n        };\n\n        const square_id = `square${i}`;\n        boardDivs.push(\n          <div \n            className={`${shade}-square`} \n            key={i}\n          >\n            <Draggable \n              onDrag={handleDrag}\n              onStart={(e) => onStart(e, i)}\n              onStop={onStop}\n              bounds='.board-container'\n            >\n              <img draggable='false' src={piecePng} />\n            </Draggable>\n            <div \n              id={square_id} \n              className='trans-square' \n              // onMouseMove={(e) => console.log(e.target.id)}\n            ></div>\n          </div>\n        )\n        \n        if ((i + 1) % 8 == 0) {\n            row += 1\n        };\n\n    }\n\n    return (\n        <>\n          <BoardStyle />\n          <div className='board-container'>\n            {boardDivs}\n          </div>\n          <h2>\n            {state.deltaPosition.x.toFixed(0)}\n          </h2>\n        </>\n    );\n}\n\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}