{"ast":null,"code":"var _jsxFileName = \"/home/kyle/code/first-app/client/src/components/Moves.js\";\nimport { createGlobalStyle } from \"styled-components\";\n\n// ♟ black pawn\n// ♙ white pawn\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst piece_dictionary_text = {\n  'BB': '♝',\n  'BH': '♞',\n  'BK': '♚',\n  'BP': '',\n  'BQ': '♛',\n  'BR': '♜',\n  'WB': '♗',\n  'WH': '♘',\n  'WK': '♔',\n  'WP': '',\n  'WQ': '♕',\n  'WR': '♖'\n};\nconst MovesStyle = createGlobalStyle`\n    .moves-container {\n        height: 40vw;\n        width: 20vw;\n        background-color: var(--light-grey);\n        margin-left: 5vw;\n        border-radius: 5%;\n    }\n\n    .move-div-container {\n        display: inline-block;\n        margin: auto;\n    }\n\n    h2 {\n        text-align: center;\n    }\n\n    li img {\n        height: 2.5vh;\n    }\n`;\n_c = MovesStyle;\nconst posToCoord = position => {\n  const row_index = position % 8;\n  const row = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'][row_index];\n  const col = 8 - Math.floor(position / 8);\n  return `${row}${col}`;\n};\nconst reshape = array => {\n  const result = [];\n  let tempArray = [];\n  let i = 0;\n  for (const element of array) {\n    tempArray.push(element);\n    if (tempArray.length == 2) {\n      result.push([i, ...tempArray]);\n      tempArray = [];\n    }\n    ;\n    i++;\n  }\n  ;\n  if (tempArray.length == 1) result.push([i, ...tempArray]);\n  return result;\n};\nfunction Moves(_ref) {\n  let {\n    moves\n  } = _ref;\n  const moveStrings = moves.slice(1).map(move => {\n    const color = move['values']['color'];\n    const piece = move['values']['piece'];\n    const capture = move['values']['capture'];\n    const toCoord = posToCoord(move['values']['toIndex']);\n    if (move['values']['castle'] == 'short') return 'O-O';\n    if (move['values']['castle'] == 'long') return 'O-O-O';\n    let pieceText;\n    pieceText = piece_dictionary_text[`${color}${piece}`];\n    return `${pieceText}${capture ? 'x' : ''}${toCoord}`;\n  });\n  const moveStringsByTwo = reshape(moveStrings);\n  const moveList = moveStringsByTwo.map(moveTriple => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [moveTriple[1], \" \", moveTriple[2]]\n    }, moveTriple[0], true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  });\n  console.log(moveStringsByTwo);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MovesStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moves-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Moves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moveStrings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Moves;\nexport default Moves;\nvar _c, _c2;\n$RefreshReg$(_c, \"MovesStyle\");\n$RefreshReg$(_c2, \"Moves\");","map":{"version":3,"names":["createGlobalStyle","jsxDEV","_jsxDEV","Fragment","_Fragment","piece_dictionary_text","MovesStyle","_c","posToCoord","position","row_index","row","col","Math","floor","reshape","array","result","tempArray","i","element","push","length","Moves","_ref","moves","moveStrings","slice","map","move","color","piece","capture","toCoord","pieceText","moveStringsByTwo","moveList","moveTriple","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","className","_c2","$RefreshReg$"],"sources":["/home/kyle/code/first-app/client/src/components/Moves.js"],"sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\n// ♟ black pawn\n// ♙ white pawn\n\nconst piece_dictionary_text = {\n    'BB': '♝',\n    'BH': '♞',\n    'BK': '♚',\n    'BP': '',\n    'BQ': '♛',\n    'BR': '♜',\n    'WB': '♗',\n    'WH': '♘',\n    'WK': '♔',\n    'WP': '',\n    'WQ': '♕',\n    'WR': '♖', \n}\n\nconst MovesStyle = createGlobalStyle`\n    .moves-container {\n        height: 40vw;\n        width: 20vw;\n        background-color: var(--light-grey);\n        margin-left: 5vw;\n        border-radius: 5%;\n    }\n\n    .move-div-container {\n        display: inline-block;\n        margin: auto;\n    }\n\n    h2 {\n        text-align: center;\n    }\n\n    li img {\n        height: 2.5vh;\n    }\n`\n\nconst posToCoord = (position) => {\n    const row_index = (position % 8);\n    const row = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'][row_index]\n    const col = 8 - Math.floor(position / 8);\n    return `${row}${col}`\n};\n\nconst reshape = (array) => {\n    const result = [];\n    let tempArray = [];\n    let i = 0;\n    for (const element of array) {\n        tempArray.push(element);\n        if (tempArray.length == 2) {\n            result.push([i, ...tempArray]);\n            tempArray = [];\n        };\n        i++;\n    };\n\n    if (tempArray.length == 1) result.push([i, ...tempArray]);\n    \n    return result\n};\n\nfunction Moves({ moves }) {\n\n    const moveStrings = moves.slice(1).map(move => {\n        const color = move['values']['color'];\n        const piece = move['values']['piece'];\n        const capture = move['values']['capture'];\n        const toCoord = posToCoord(move['values']['toIndex'])\n\n        if (move['values']['castle'] == 'short') return 'O-O';\n        if (move['values']['castle'] == 'long') return 'O-O-O';\n\n        let pieceText;\n        pieceText = piece_dictionary_text[`${color}${piece}`];\n\n        return `${pieceText}${capture ? 'x' : ''}${toCoord}`\n    });\n\n    const moveStringsByTwo = reshape(moveStrings);\n\n    const moveList = moveStringsByTwo.map(moveTriple => {\n        return (\n            <li key={moveTriple[0]}>\n                {moveTriple[1]} {moveTriple[2]}\n            </li>\n        );\n    });\n\n    console.log(moveStringsByTwo)\n\n    return (\n        <>\n            <MovesStyle />\n            <div className='moves-container'>\n                <h2>Moves</h2>\n                <ol>{moveStrings}</ol>\n            </div>\n        </>\n    );\n}\n\nexport default Moves;"],"mappings":";AAAA,SAASA,iBAAiB,QAAQ,mBAAmB;;AAErD;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,qBAAqB,GAAG;EAC1B,IAAI,EAAE,GAAG;EACT,IAAI,EAAE,GAAG;EACT,IAAI,EAAE,GAAG;EACT,IAAI,EAAE,EAAE;EACR,IAAI,EAAE,GAAG;EACT,IAAI,EAAE,GAAG;EACT,IAAI,EAAE,GAAG;EACT,IAAI,EAAE,GAAG;EACT,IAAI,EAAE,GAAG;EACT,IAAI,EAAE,EAAE;EACR,IAAI,EAAE,GAAG;EACT,IAAI,EAAE;AACV,CAAC;AAED,MAAMC,UAAU,GAAGN,iBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAO,EAAA,GArBKD,UAAU;AAuBhB,MAAME,UAAU,GAAIC,QAAQ,IAAK;EAC7B,MAAMC,SAAS,GAAID,QAAQ,GAAG,CAAE;EAChC,MAAME,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACD,SAAS,CAAC;EAC/D,MAAME,GAAG,GAAG,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,GAAG,CAAC,CAAC;EACxC,OAAQ,GAAEE,GAAI,GAAEC,GAAI,EAAC;AACzB,CAAC;AAED,MAAMG,OAAO,GAAIC,KAAK,IAAK;EACvB,MAAMC,MAAM,GAAG,EAAE;EACjB,IAAIC,SAAS,GAAG,EAAE;EAClB,IAAIC,CAAC,GAAG,CAAC;EACT,KAAK,MAAMC,OAAO,IAAIJ,KAAK,EAAE;IACzBE,SAAS,CAACG,IAAI,CAACD,OAAO,CAAC;IACvB,IAAIF,SAAS,CAACI,MAAM,IAAI,CAAC,EAAE;MACvBL,MAAM,CAACI,IAAI,CAAC,CAACF,CAAC,EAAE,GAAGD,SAAS,CAAC,CAAC;MAC9BA,SAAS,GAAG,EAAE;IAClB;IAAC;IACDC,CAAC,EAAE;EACP;EAAC;EAED,IAAID,SAAS,CAACI,MAAM,IAAI,CAAC,EAAEL,MAAM,CAACI,IAAI,CAAC,CAACF,CAAC,EAAE,GAAGD,SAAS,CAAC,CAAC;EAEzD,OAAOD,MAAM;AACjB,CAAC;AAED,SAASM,KAAKA,CAAAC,IAAA,EAAY;EAAA,IAAX;IAAEC;EAAM,CAAC,GAAAD,IAAA;EAEpB,MAAME,WAAW,GAAGD,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,CAACC,IAAI,IAAI;IAC3C,MAAMC,KAAK,GAAGD,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC;IACrC,MAAME,KAAK,GAAGF,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC;IACrC,MAAMG,OAAO,GAAGH,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;IACzC,MAAMI,OAAO,GAAGzB,UAAU,CAACqB,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;IAErD,IAAIA,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,OAAO,EAAE,OAAO,KAAK;IACrD,IAAIA,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,MAAM,EAAE,OAAO,OAAO;IAEtD,IAAIK,SAAS;IACbA,SAAS,GAAG7B,qBAAqB,CAAE,GAAEyB,KAAM,GAAEC,KAAM,EAAC,CAAC;IAErD,OAAQ,GAAEG,SAAU,GAAEF,OAAO,GAAG,GAAG,GAAG,EAAG,GAAEC,OAAQ,EAAC;EACxD,CAAC,CAAC;EAEF,MAAME,gBAAgB,GAAGpB,OAAO,CAACW,WAAW,CAAC;EAE7C,MAAMU,QAAQ,GAAGD,gBAAgB,CAACP,GAAG,CAACS,UAAU,IAAI;IAChD,oBACInC,OAAA;MAAAoC,QAAA,GACKD,UAAU,CAAC,CAAC,CAAC,EAAC,GAAC,EAACA,UAAU,CAAC,CAAC,CAAC;IAAA,GADzBA,UAAU,CAAC,CAAC,CAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEjB;EAEb,CAAC,CAAC;EAEFC,OAAO,CAACC,GAAG,CAACT,gBAAgB,CAAC;EAE7B,oBACIjC,OAAA,CAAAE,SAAA;IAAAkC,QAAA,gBACIpC,OAAA,CAACI,UAAU;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACdxC,OAAA;MAAK2C,SAAS,EAAC,iBAAiB;MAAAP,QAAA,gBAC5BpC,OAAA;QAAAoC,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACdxC,OAAA;QAAAoC,QAAA,EAAKZ;MAAW;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpB;EAAA,gBACP;AAEX;AAACI,GAAA,GAtCQvB,KAAK;AAwCd,eAAeA,KAAK;AAAC,IAAAhB,EAAA,EAAAuC,GAAA;AAAAC,YAAA,CAAAxC,EAAA;AAAAwC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}