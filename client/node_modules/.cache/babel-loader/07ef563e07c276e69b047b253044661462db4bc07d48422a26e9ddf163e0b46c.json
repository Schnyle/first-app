{"ast":null,"code":"var _jsxFileName = \"/home/kyle/code/first-app/client/src/components/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Board from './Board.js';\nimport Moves from './Moves.js';\n// import test from './test'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle`\n    :root {\n      --black: black;\n      --white: #bcbbbf;\n      --purple: #270973;\n      --dark-grey: #111;\n      --light-grey: #383838;\n    }\n\n    body {\n      background-color: var(--dark-grey);\n      color: var(--white);\n    }\n\n    .game-container {\n      display: inline-block;\n      width: 100vw;\n    }\n`;\n_c = GlobalStyle;\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState({\n    pieces: '',\n    colors: '',\n    whites_turn: true,\n    toIndex: null,\n    fromIndex: null\n  });\n  const [moveData, setMoveData] = useState([{\n    index: 0,\n    values: {\n      toIndex: -1,\n      piece: '',\n      color: '',\n      capture: false,\n      castle: ''\n    }\n  }]);\n  useEffect(() => {\n    fetch('http://127.0.0.1:5555/moves').then(r => r.json()).then(data => {\n      setGameState(data.slice(-1)[0]);\n    });\n  }, []);\n  async function handleMove(fromIndex, toIndex) {\n    const configObj = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        fromIndex,\n        toIndex\n      })\n    };\n    const newGameState = await fetch('http://127.0.0.1:5555/moves', configObj).then(r => r.json());\n    setGameState(newGameState);\n    const validMove = !(gameState.pieces == newGameState.pieces);\n    if (validMove) setMoveData(moves => {\n      const index = moves.slice(-1)[0]['index'] + 1;\n      let castle = '';\n      if (newGameState['pieces'][toIndex] == 'K' && newGameState['colors'][toIndex] == 'W') {\n        if (fromIndex == 60 && toIndex == 62) castle = 'short';\n        if (fromIndex == 60 && toIndex == 58) castle = 'long';\n      }\n      ;\n      const values = {\n        toIndex: toIndex,\n        piece: newGameState['pieces'][toIndex],\n        color: newGameState['colors'][toIndex],\n        capture: gameState['pieces'][toIndex] != 'E',\n        castle: castle\n      };\n      return [...moves, {\n        index,\n        values\n      }];\n    });\n    return validMove;\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chess by Kyle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(Board, {\n        gameState: gameState,\n        handleMove: handleMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Moves, {\n        moves: moveData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"W0aWW73ef3yXx/l8tohxLpc1boI=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useEffect","useState","createGlobalStyle","Board","Moves","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalStyle","_c","App","_s","gameState","setGameState","pieces","colors","whites_turn","toIndex","fromIndex","moveData","setMoveData","index","values","piece","color","capture","castle","fetch","then","r","json","data","slice","handleMove","configObj","method","headers","body","JSON","stringify","newGameState","validMove","moves","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c2","$RefreshReg$"],"sources":["/home/kyle/code/first-app/client/src/components/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\n\nimport Board from './Board.js';\nimport Moves from './Moves.js';\n// import test from './test'\n\nconst GlobalStyle = createGlobalStyle`\n    :root {\n      --black: black;\n      --white: #bcbbbf;\n      --purple: #270973;\n      --dark-grey: #111;\n      --light-grey: #383838;\n    }\n\n    body {\n      background-color: var(--dark-grey);\n      color: var(--white);\n    }\n\n    .game-container {\n      display: inline-block;\n      width: 100vw;\n    }\n`\n\nfunction App() {\n\n  const [gameState, setGameState] = useState({\n    pieces: '',\n    colors: '',\n    whites_turn: true,\n    toIndex: null,\n    fromIndex: null\n  })\n  const [moveData, setMoveData] = useState([\n    {index: 0, values: {toIndex: -1, piece: '', color: '', capture: false, castle: ''}}\n  ]);\n\n  useEffect(() => {\n    fetch('http://127.0.0.1:5555/moves')\n      .then(r => r.json())\n      .then(data => {setGameState(data.slice(-1)[0])})\n  }, []);\n\n  async function handleMove(fromIndex, toIndex) {\n    const configObj = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n      },\n      body: JSON.stringify({fromIndex, toIndex,}),\n    };\n\n    const newGameState = await fetch('http://127.0.0.1:5555/moves', configObj)\n      .then(r => r.json());\n    setGameState(newGameState)\n\n    const validMove = !(gameState.pieces == newGameState.pieces);\n    \n    if (validMove) setMoveData(moves => {\n      const index = moves.slice(-1)[0]['index'] + 1;\n      let castle = '';\n      if (newGameState['pieces'][toIndex] == 'K' && newGameState['colors'][toIndex] == 'W') {\n        if (fromIndex == 60 && toIndex == 62) castle = 'short';\n        if (fromIndex == 60 && toIndex == 58) castle = 'long';\n      };\n      const values = {\n        toIndex: toIndex, \n        piece: newGameState['pieces'][toIndex],\n        color: newGameState['colors'][toIndex],\n        capture: gameState['pieces'][toIndex] != 'E',\n        castle: castle\n      };\n      return [...moves, {index, values} ]\n    }); \n\n    return validMove\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <h1>Chess by Kyle</h1>\n      <div className='game-container'>\n        <Board \n          gameState={gameState}\n          handleMove={handleMove}\n        />\n        <Moves moves={moveData}/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}