{"ast":null,"code":"var _jsxFileName = \"/home/kyle/code/first-app/client/src/components/Board.js\";\nimport { createGlobalStyle } from 'styled-components';\nimport Draggable from 'react-draggable';\nimport piece_dictionary from './PiecePngs';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardStyle = createGlobalStyle`\n\n    .board-container {\n        height: 40vw;\n        width: 40vw;\n        display: grid;\n        grid-template-columns: repeat(8, 1fr);\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    .light-square {\n        height: 5vw;\n        background-color: var(--white);\n        display: flex;\n    }\n\n    .dark-square {\n        height: 5vw;\n        background-color: var(--purple);\n        display: flex;\n    }\n\n    .img {\n        height: 5vw;\n        width: 5vw;\n        margin: 0;\n    }\n\n`;\n_c = BoardStyle;\nfunction Board(_ref) {\n  let {\n    gameState\n  } = _ref;\n  const state = {\n    activeDrags: 0,\n    deltaPosition: {\n      x: 0,\n      y: 0\n    }\n  };\n  const handleDrag = (e, ui) => {\n    const {\n      x,\n      y\n    } = state.deltaPosition;\n    ui.position = {\n      x: x,\n      y: y\n    };\n    console.log(`x: ${state.deltaPosition.x}, y: ${state.deltaPosition.y}`);\n  };\n  const onStart = () => {\n    ++state.activeDrags;\n  };\n  const onStop = () => {\n    --state.activeDrags;\n  };\n  const pieces_array = gameState.pieces.split('');\n  const colors_array = gameState.colors.split('');\n  if (pieces_array.length == 0 || colors_array.length == 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  ;\n  const boardDivs = [];\n  let row = 0;\n  for (let i = 0; i < 64; i++) {\n    // set color\n    let shade;\n    if (i % 2 == 0 && row % 2 == 0 || i % 2 == 1 && row % 2 == 1) {\n      shade = 'light';\n    } else shade = 'dark';\n\n    // set piece\n    let piecePng;\n    if (colors_array[i] == 'E') {\n      piecePng = '';\n    } else {\n      const color = colors_array[i];\n      const piece = pieces_array[i];\n      piecePng = piece_dictionary[`${color}${piece}`];\n    }\n    ;\n    boardDivs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${shade}-square`,\n      children: /*#__PURE__*/_jsxDEV(Draggable, {\n        onDrag: handleDrag,\n        onStart: onStart,\n        onStop: onStop,\n        bounds: \".board-container\"\n        // offsetParent={document.querySelector('.board-container')}\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          draggable: \"false\",\n          src: piecePng\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this));\n    if ((i + 1) % 8 == 0) {\n      row += 1;\n    }\n    ;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BoardStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      children: boardDivs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default Board;\nvar _c, _c2;\n$RefreshReg$(_c, \"BoardStyle\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["createGlobalStyle","Draggable","piece_dictionary","Fragment","_Fragment","jsxDEV","_jsxDEV","BoardStyle","_c","Board","_ref","gameState","state","activeDrags","deltaPosition","x","y","handleDrag","e","ui","position","console","log","onStart","onStop","pieces_array","pieces","split","colors_array","colors","length","boardDivs","row","i","shade","piecePng","color","piece","push","className","children","onDrag","bounds","draggable","src","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/kyle/code/first-app/client/src/components/Board.js"],"sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport Draggable from 'react-draggable';\n\nimport piece_dictionary from './PiecePngs';\n\nconst BoardStyle = createGlobalStyle`\n\n    .board-container {\n        height: 40vw;\n        width: 40vw;\n        display: grid;\n        grid-template-columns: repeat(8, 1fr);\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    .light-square {\n        height: 5vw;\n        background-color: var(--white);\n        display: flex;\n    }\n\n    .dark-square {\n        height: 5vw;\n        background-color: var(--purple);\n        display: flex;\n    }\n\n    .img {\n        height: 5vw;\n        width: 5vw;\n        margin: 0;\n    }\n\n`\n\nfunction Board({ gameState }) {\n    const state = {\n        activeDrags: 0,\n        deltaPosition: {\n          x: 0, y: 0  \n        },\n    }\n\n    const handleDrag = (e, ui) => {\n        const {x, y} = state.deltaPosition;\n        ui.position = {\n            x: x,\n            y: y\n        };\n        console.log(`x: ${state.deltaPosition.x}, y: ${state.deltaPosition.y}`)\n    };\n    const onStart = () => {\n        ++state.activeDrags\n    };\n    const onStop = () => {\n        --state.activeDrags;\n    };\n\n    const pieces_array = gameState.pieces.split('')\n    const colors_array = gameState.colors.split('')\n\n    if (pieces_array.length == 0 || colors_array.length == 0) {\n        return <></>\n    };\n\n    const boardDivs = [];\n    \n    let row = 0;\n    for (let i = 0; i < 64; i++) {\n        // set color\n        let shade;\n        if ((i % 2 == 0 && row % 2 == 0) || (i % 2 == 1 && row % 2 == 1)) {\n            shade = 'light'\n        } else shade = 'dark';\n\n        // set piece\n        let piecePng;\n        if (colors_array[i] == 'E') {\n            piecePng = ''\n        } else {\n            const color = colors_array[i];\n            const piece = pieces_array[i];\n            piecePng = piece_dictionary[`${color}${piece}`]\n        };\n\n        boardDivs.push(\n          <div className={`${shade}-square`} key={i}>\n            <Draggable \n              onDrag={handleDrag}\n              onStart={onStart}\n              onStop={onStop}\n              bounds='.board-container'\n              // offsetParent={document.querySelector('.board-container')}\n            >\n              <img draggable='false' src={piecePng}/>\n            </Draggable>\n          </div>\n        )\n        \n        if ((i + 1) % 8 == 0) {\n            row += 1\n        };\n\n    }\n\n    return (\n        <>\n          <BoardStyle />\n          <div className='board-container'>\n            {boardDivs}\n          </div>\n        </>\n    );\n}\n\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}