{"ast":null,"code":"var _jsxFileName = \"/home/kyle/code/first-app/client/src/components/Board.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Draggable from 'react-draggable';\nimport piece_dictionary from './PiecePngs';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardStyle = createGlobalStyle`\n\n    .board-container {\n        height: 40vw;\n        width: 40vw;\n        display: grid;\n        grid-template-columns: repeat(8, 1fr);\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    .light-square, .dark-square, .trans-square {\n        height: 5vw;\n        width: 5vw;\n        display: flex;\n    }\n\n    .trans-square {\n      border: 1px solid black;\n      opacity: 0;\n      height: 100%;\n      width: 100%;\n      z-index: 1;\n    }\n\n    .light-square {\n        background-color: var(--white);\n    }\n\n    .dark-square {\n        background-color: var(--purple);\n    }\n\n    img {\n      z-index: 0;\n    }\n\n`;\n_c = BoardStyle;\nconst getSquares = (posDiff, square_dim) => {\n  const posDiffSign = posDiff > 0 ? 1 : -1;\n  let squares = posDiffSign;\n  if (Math.abs(posDiff) < square_dim / 2) {\n    return 0;\n  }\n  ;\n  posDiff = posDiff - posDiffSign * square_dim / 2;\n  while (Math.abs(posDiff) > square_dim) {\n    squares += posDiffSign;\n    posDiff -= posDiffSign * square_dim;\n  }\n  ;\n  return squares;\n};\nfunction Board(_ref) {\n  _s();\n  let {\n    gameState,\n    handleMove,\n    validMove\n  } = _ref;\n  const [controlledPositions, setControlledPositions] = useState(new Array(64).fill({\n    x: 0,\n    y: 0\n  }));\n  const square_dim_x = window.innerWidth / 20;\n  const square_dim_y = square_dim_x + 2;\n  const handleDrag = (e, ui, index) => {\n    const {\n      x,\n      y\n    } = controlledPositions[index];\n    setControlledPositions(positions => {\n      const newArr = [...positions];\n      newArr[index] = {\n        x: x + ui.deltaX,\n        y: y + ui.deltaY\n      };\n      return newArr;\n    });\n  };\n  const onStart = (e, i) => {};\n  const onStop = async (e, dragElement, index) => {\n    const xSquares = getSquares(controlledPositions[index].x, square_dim_x);\n    const ySquares = getSquares(controlledPositions[index].y, square_dim_y);\n    const fromIndex = index;\n    const toIndex = fromIndex + 8 * ySquares + xSquares;\n    const validMove = await handleMove(fromIndex, toIndex);\n    if (!validMove) {\n      console.log(\"invalid move\");\n      setControlledPositions(prev => {\n        const newArr = [...prev];\n        newArr[index] = {\n          x: 0,\n          y: 0\n        };\n        return newArr;\n      });\n    } else {\n      console.log(\"valid move\");\n    }\n  };\n  const pieces_array = gameState.pieces.split(\"\");\n  const colors_array = gameState.colors.split(\"\");\n  if (pieces_array.length == 0 || colors_array.length == 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  const boardDivs = [];\n  let row = 0;\n  for (let i = 0; i < 64; i++) {\n    let shade;\n    if (i % 2 == 0 && row % 2 == 0 || i % 2 == 1 && row % 2 == 1) {\n      shade = \"light\";\n    } else shade = \"dark\";\n    let piecePng;\n    if (colors_array[i] == \"E\") {\n      piecePng = \"\";\n    } else {\n      const color = colors_array[i];\n      const piece = pieces_array[i];\n      piecePng = piece_dictionary[`${color}${piece}`];\n    }\n    const square_id = `square${i}`;\n    boardDivs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${shade}-square`,\n      children: [/*#__PURE__*/_jsxDEV(Draggable, {\n        onDrag: (e, ui) => handleDrag(e, ui, i),\n        onStart: e => onStart(e, i),\n        onStop: (e, dragElement) => onStop(e, dragElement, i),\n        bounds: \".board-container\",\n        position: controlledPositions[i],\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          draggable: \"false\",\n          src: piecePng\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: square_id,\n        className: \"trans-square\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this));\n    if ((i + 1) % 8 == 0) {\n      row += 1;\n    }\n    ;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BoardStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      children: boardDivs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_s(Board, \"mREmtw9AU6WQSYnL5OdX1x3Qusc=\");\n_c2 = Board;\nexport default Board;\nvar _c, _c2;\n$RefreshReg$(_c, \"BoardStyle\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","createGlobalStyle","Draggable","piece_dictionary","Fragment","_Fragment","jsxDEV","_jsxDEV","BoardStyle","_c","getSquares","posDiff","square_dim","posDiffSign","squares","Math","abs","Board","_ref","_s","gameState","handleMove","validMove","controlledPositions","setControlledPositions","Array","fill","x","y","square_dim_x","window","innerWidth","square_dim_y","handleDrag","e","ui","index","positions","newArr","deltaX","deltaY","onStart","i","onStop","dragElement","xSquares","ySquares","fromIndex","toIndex","console","log","prev","pieces_array","pieces","split","colors_array","colors","length","boardDivs","row","shade","piecePng","color","piece","square_id","push","className","children","onDrag","bounds","position","draggable","src","fileName","_jsxFileName","lineNumber","columnNumber","id","_c2","$RefreshReg$"],"sources":["/home/kyle/code/first-app/client/src/components/Board.js"],"sourcesContent":["import { useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Draggable from 'react-draggable';\n\nimport piece_dictionary from './PiecePngs';\n\nconst BoardStyle = createGlobalStyle`\n\n    .board-container {\n        height: 40vw;\n        width: 40vw;\n        display: grid;\n        grid-template-columns: repeat(8, 1fr);\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    .light-square, .dark-square, .trans-square {\n        height: 5vw;\n        width: 5vw;\n        display: flex;\n    }\n\n    .trans-square {\n      border: 1px solid black;\n      opacity: 0;\n      height: 100%;\n      width: 100%;\n      z-index: 1;\n    }\n\n    .light-square {\n        background-color: var(--white);\n    }\n\n    .dark-square {\n        background-color: var(--purple);\n    }\n\n    img {\n      z-index: 0;\n    }\n\n`\n\nconst getSquares = (posDiff, square_dim) => {\n  const posDiffSign = (posDiff > 0 ? 1 : -1)\n  let squares = posDiffSign\n  if (Math.abs(posDiff) < square_dim / 2) {\n    return 0\n  };\n  posDiff = posDiff - (posDiffSign * square_dim / 2)\n  while(Math.abs(posDiff) > square_dim) {\n    squares += (posDiffSign)\n    posDiff -= (posDiffSign * square_dim)\n  };\n  return squares\n};\n\nfunction Board({ gameState, handleMove, validMove }) {\n  const [controlledPositions, setControlledPositions] = useState(new Array(64).fill({ x: 0, y: 0 }));\n  const square_dim_x = window.innerWidth / 20;\n  const square_dim_y = square_dim_x + 2;\n\n  const handleDrag = (e, ui, index) => {\n    const { x, y } = controlledPositions[index];\n    setControlledPositions((positions) => {\n      const newArr = [...positions];\n      newArr[index] = { x: x + ui.deltaX, y: y + ui.deltaY };\n      return newArr;\n    });\n  };\n\n  const onStart = (e, i) => {};\n\n  const onStop = async (e, dragElement, index) => {\n    const xSquares = getSquares(controlledPositions[index].x, square_dim_x);\n    const ySquares = getSquares(controlledPositions[index].y, square_dim_y);\n    const fromIndex = index;\n    const toIndex = fromIndex + 8 * ySquares + xSquares;\n\n    const validMove = await handleMove(fromIndex, toIndex);\n\n    if (!validMove) {\n      console.log(\"invalid move\");\n      setControlledPositions((prev) => {\n        const newArr = [...prev];\n        newArr[index] = { x: 0, y: 0 };\n        return newArr;\n      });\n    } else {\n      console.log(\"valid move\");\n    }\n  };\n\n  const pieces_array = gameState.pieces.split(\"\");\n  const colors_array = gameState.colors.split(\"\");\n\n  if (pieces_array.length == 0 || colors_array.length == 0) {\n    return <></>;\n  }\n\n  const boardDivs = [];\n\n  let row = 0;\n  for (let i = 0; i < 64; i++) {\n    let shade;\n    if ((i % 2 == 0 && row % 2 == 0) || (i % 2 == 1 && row % 2 == 1)) {\n      shade = \"light\";\n    } else shade = \"dark\";\n\n    let piecePng;\n    if (colors_array[i] == \"E\") {\n      piecePng = \"\";\n    } else {\n      const color = colors_array[i];\n      const piece = pieces_array[i];\n      piecePng = piece_dictionary[`${color}${piece}`];\n    }\n\n    const square_id = `square${i}`;\n    boardDivs.push(\n      <div className={`${shade}-square`} key={i}>\n        <Draggable\n          onDrag={(e, ui) => handleDrag(e, ui, i)}\n          onStart={(e) => onStart(e, i)}\n          onStop={(e, dragElement) => onStop(e, dragElement, i)}\n          bounds=\".board-container\"\n          position={controlledPositions[i]}\n        >\n          <img draggable=\"false\" src={piecePng} />\n        </Draggable>\n        <div id={square_id} className=\"trans-square\"></div>\n      </div>\n    );\n        \n        if ((i + 1) % 8 == 0) {\n            row += 1\n        };\n\n    }\n\n    return (\n        <>\n          <BoardStyle />\n          <div className='board-container'>\n            {boardDivs}\n          </div>\n        </>\n    );\n}\n\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}